---
import { getMembers } from '../../lib/WP';
import Member from './Member.astro';
interface Props {
    limited?: boolean;
}
const { limited } = Astro.props;

const shuffleArray = (array: any[]) => {
    

    const cloneArray = [...array]

    for (let i = cloneArray.length - 1; i >= 0; i--) {
        let rand = Math.floor(Math.random() * (i + 1))
        // 配列の要素の順番を入れ替える
        let tmpStorage = cloneArray[i]
        cloneArray[i] = cloneArray[rand]
        cloneArray[rand] = tmpStorage
    }

    return cloneArray
}

const members = await getMembers();
---

<section class="members flex flex-wrap">
    {limited &&
        <input type="hidden" name="limited" value="true">
    }
    {members.map(member =>
        <Member memberInfo={member} />
    )}
</section>

<style>
    .works {
    }
</style>

<script>
    const members = document.getElementsByClassName('member') as HTMLCollectionOf<HTMLElement>;
    const randomOrders = Array.from({ length: members.length }, (_, i) => i);
    const limitedInput = document.querySelector('input[name="limited"]') as HTMLInputElement;
    if(!limitedInput) {
        randomOrders.sort(() => Math.random() - 0.5);
        for(let i = 0; i < members.length; i++) {
            members[i].style.order = randomOrders[i].toString();
        }
    }
    else{
        const limited = limitedInput.value === "true";
        if(limited){
            for(let i = 0; i < members.length; i++) {
                const order = members[i].dataset.order;
                if(order) members[i].style.order = order;
            }
        }
    }
</script>