---
import { getWorks } from '../../lib/WP.ts';
import {type CatType } from '../../lib/WP.ts';
import Slider from '../top/Slider.tsx';
import Scrollate from '../common/Scrollate.astro';
import Work from './Work.astro';

interface Props {
    filterCatId?: number;
    disableSlider?: boolean;
    limited: boolean;
}
const { filterCatId, disableSlider, limited } = Astro.props;

let works = await getWorks({'per_page': "10"});
if(!limited) works = works.filter(work => !work.acf.limited);
const recommendWorks = works.filter(work => work.acf.is_recommend);

if(filterCatId) {
    works = works.filter(work => work.categories.filter(cat => cat == filterCatId).length > 0);
}

works = works.sort((a, b) => parseInt(b.acf.period.split(" - ")[0]) - parseInt(a.acf.period.split(" - ")[0]));
---

<section class="works">
    {!disableSlider &&
        <Slider client:load works={recommendWorks}/>
    }
    {!disableSlider &&
        <Scrollate text='other projects'/>
    }
    <div class="others block md:grid grid-flow-dense md:grid-cols-2 lg:grid-cols-3 md:grid-rows-[200px] md:gap-5">
        {
            works.map(work => <Work limited={limited} work={work}/>)
        }
    </div>
</section>

<style>
    .works {
    }
</style>

<script>
</script>